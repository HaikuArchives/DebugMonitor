From bc2967794871987ab968a22297a9195b98acc888 Mon Sep 17 00:00:00 2001
From: Bach Nguyen <bach5000@gmail.com>
Date: Mon, 19 Nov 2018 18:15:10 +0000
Subject: Fix build


diff --git a/DebugClient/DebugClient.cpp b/DebugClient/DebugClient.cpp
index f64e4f5..afbe0c0 100644
--- a/DebugClient/DebugClient.cpp
+++ b/DebugClient/DebugClient.cpp
@@ -4,10 +4,11 @@
  * $Log$
  *
  */
-
+#include <AppKit.h>
 #include "DebugClient.h"
 
-#include <Application.h>
+#include <InterfaceKit.h>
+
 #include <OS.h>
 #include <time.h>
 
@@ -64,4 +65,4 @@ void DebugClient::handletrace(const char *message,
 	server.SendMessage(&m);
 }
 	
-		
\ No newline at end of file
+		
diff --git a/DebugClient/DebugClient.h b/DebugClient/DebugClient.h
index c16dd82..d957540 100644
--- a/DebugClient/DebugClient.h
+++ b/DebugClient/DebugClient.h
@@ -23,7 +23,8 @@
 // #include <stdlib.h>
 #include <Messenger.h>
 #include <String.h>
-#include <strstream.h>
+#include <strstream>
+#include <Application.h>
 
 class DebugClient 
 {
@@ -52,8 +53,8 @@ public:
 
 #define trace(msg)                                          \
   {                                                         \
-     ostrstream _alidbgout;                                 \
-     _alidbgout << msg << ends;                             \
+     std::ostrstream _alidbgout;                                 \
+     _alidbgout << msg << std::endl;                             \
      DebugClient::handletrace(_alidbgout.str(), "Def", 1,   \
             __FILE__, __LINE__, __PRETTY_FUNCTION__);       \
   }
@@ -61,16 +62,16 @@ public:
 #define warn(expr,msg)                                      \
   if(expr)                                                  \
   {                                                         \
-     ostrstream _alidbgout;                                 \
-     _alidbgout << msg << ends;                             \
+     std::ostrstream _alidbgout;                                 \
+     _alidbgout << msg << std::endl;                             \
      DebugClient::handletrace(_alidbgout.str(), "Def", 1,   \
             __FILE__, __LINE__, __PRETTY_FUNCTION__);       \
   }
 
 #define tracex(grp,lvl,msg)                                 \
   {                                                         \
-     ostrstream _alidbgout;                                 \
-     _alidbgout << msg << ends;                             \
+     std::ostrstream _alidbgout;                                 \
+     _alidbgout << msg << std::endl;                             \
      DebugClient::handletrace(_alidbgout.str(), grp, lvl,   \
             __FILE__, __LINE__, __PRETTY_FUNCTION__);       \
   }
@@ -78,8 +79,8 @@ public:
 #define warnx(expr,grp,lvl,msg)                             \
   if(expr)                                                  \
   {                                                         \
-     ostrstream _alidbgout;                                 \
-     _alidbgout << msg << ends;                             \
+     std::ostrstream _alidbgout;                                 \
+     _alidbgout << msg << std::endl;                             \
      DebugClient::handletrace(_alidbgout.str(), grp, lvl,   \
             __FILE__, __LINE__, __PRETTY_FUNCTION__);       \
   }
@@ -99,4 +100,4 @@ enum { dbgFORCE = 0, dbgMAJOR = 5, dbgMINOR = 10, dbgVERBOSE = 15 };
 #endif
 
 
-#endif
\ No newline at end of file
+#endif
diff --git a/DebugClient/Makefile b/DebugClient/Makefile
new file mode 100644
index 0000000..aa1f1cd
--- /dev/null
+++ b/DebugClient/Makefile
@@ -0,0 +1,123 @@
+## Haiku Generic Makefile v2.6 ##
+
+## Fill in this file to specify the project being created, and the referenced
+## Makefile-Engine will do all of the hard work for you. This handles any
+## architecture of Haiku.
+
+# The name of the binary.
+NAME = DebugClient
+
+# The type of binary, must be one of:
+#	APP:	Application
+#	SHARED:	Shared library or add-on
+#	STATIC:	Static library archive
+#	DRIVER: Kernel driver
+TYPE = STATIC
+
+# 	If you plan to use localization, specify the application's MIME signature.
+APP_MIME_SIG = 
+
+#	The following lines tell Pe and Eddie where the SRCS, RDEFS, and RSRCS are
+#	so that Pe and Eddie can fill them in for you.
+#%{
+# @src->@ 
+
+#	Specify the source files to use. Full paths or paths relative to the 
+#	Makefile can be included. All files, regardless of directory, will have
+#	their object files created in the common object directory. Note that this
+#	means this Makefile will not work correctly if two source files with the
+#	same name (source.c or source.cpp) are included from different directories.
+#	Also note that spaces in folder names do not work well with this Makefile.
+SRCS =  DebugClient.cpp 
+
+#	Specify the resource definition files to use. Full or relative paths can be
+#	used.
+RDEFS = 
+
+#	Specify the resource files to use. Full or relative paths can be used.
+#	Both RDEFS and RSRCS can be utilized in the same Makefile.
+RSRCS =  
+
+# End Pe/Eddie support.
+# @<-src@ 
+#%}
+
+#	Specify libraries to link against.
+#	There are two acceptable forms of library specifications:
+#	-	if your library follows the naming pattern of libXXX.so or libXXX.a,
+#		you can simply specify XXX for the library. (e.g. the entry for
+#		"libtracker.so" would be "tracker")
+#
+#	-	for GCC-independent linking of standard C++ libraries, you can use
+#		$(STDCPPLIBS) instead of the raw "stdc++[.r4] [supc++]" library names.
+#
+#	- 	if your library does not follow the standard library naming scheme,
+#		you need to specify the path to the library and it's name.
+#		(e.g. for mylib.a, specify "mylib.a" or "path/mylib.a")
+LIBS =  $(STDCPPLIBS) be
+
+#	Specify additional paths to directories following the standard libXXX.so
+#	or libXXX.a naming scheme. You can specify full paths or paths relative
+#	to the Makefile. The paths included are not parsed recursively, so
+#	include all of the paths where libraries must be found. Directories where
+#	source files were specified are	automatically included.
+LIBPATHS = 
+
+#	Additional paths to look for system headers. These use the form
+#	"#include <header>". Directories that contain the files in SRCS are
+#	NOT auto-included here.
+SYSTEM_INCLUDE_PATHS =
+
+#	Additional paths paths to look for local headers. These use the form
+#	#include "header". Directories that contain the files in SRCS are
+#	automatically included.
+LOCAL_INCLUDE_PATHS =
+
+#	Specify the level of optimization that you want. Specify either NONE (O0),
+#	SOME (O1), FULL (O2), or leave blank (for the default optimization level).
+OPTIMIZE :=
+
+# 	Specify the codes for languages you are going to support in this
+# 	application. The default "en" one must be provided too. "make catkeys"
+# 	will recreate only the "locales/en.catkeys" file. Use it as a template
+# 	for creating catkeys for other languages. All localization files must be
+# 	placed in the "locales" subdirectory.
+LOCALES = 
+
+#	Specify all the preprocessor symbols to be defined. The symbols will not
+#	have their values set automatically; you must supply the value (if any) to
+#	use. For example, setting DEFINES to "DEBUG=1" will cause the compiler
+#	option "-DDEBUG=1" to be used. Setting DEFINES to "DEBUG" would pass
+#	"-DDEBUG" on the compiler's command line.
+DEFINES = 
+
+#	Specify the warning level. Either NONE (suppress all warnings),
+#	ALL (enable all warnings), or leave blank (enable default warnings).
+WARNINGS = 
+
+#	With image symbols, stack crawls in the debugger are meaningful.
+#	If set to "TRUE", symbols will be created.
+SYMBOLS := 
+
+#	Includes debug information, which allows the binary to be debugged easily.
+#	If set to "TRUE", debug info will be created.
+DEBUGGER := 
+
+#	Specify any additional compiler flags to be used.
+COMPILER_FLAGS = 
+
+#	Specify any additional linker flags to be used.
+LINKER_FLAGS = 
+
+#	(Only used when "TYPE" is "DRIVER"). Specify the desired driver install
+#	location in the /dev hierarchy. Example:
+#		DRIVER_PATH = video/usb
+#	will instruct the "driverinstall" rule to place a symlink to your driver's
+#	binary in ~/add-ons/kernel/drivers/dev/video/usb, so that your driver will
+#	appear at /dev/video/usb when loaded. The default is "misc".
+DRIVER_PATH = 
+
+## Include the Makefile-Engine
+DEVEL_DIRECTORY := \
+	$(shell findpaths -r "makefile_engine" B_FIND_PATH_DEVELOP_DIRECTORY)
+include $(DEVEL_DIRECTORY)/etc/makefile-engine
diff --git a/DebugMonitor/DebugMonitor.h b/DebugMonitor/DebugMonitor.h
index 20a9bd7..e432079 100644
--- a/DebugMonitor/DebugMonitor.h
+++ b/DebugMonitor/DebugMonitor.h
@@ -10,10 +10,13 @@
 
 #include "Tracer.h"
 #include <Application.h>
-#include <map.h>
+#include <SupportKit.h>
+#include <InterfaceKit.h>
+#include <map>
 #include <String.h>
 
-typedef map<BString, TracerWindow *> StringWindowMap; 
+
+typedef std::map<BString, TracerWindow *> StringWindowMap; 
 
 class DebugMonitorApp : public BApplication
 {
@@ -23,4 +26,4 @@ public:
 	virtual void MessageReceived(BMessage *message);
 };
 
-#endif
\ No newline at end of file
+#endif
diff --git a/DebugMonitor/DebugMonitor.rdef b/DebugMonitor/DebugMonitor.rdef
new file mode 100644
index 0000000..2887177
--- /dev/null
+++ b/DebugMonitor/DebugMonitor.rdef
@@ -0,0 +1,71 @@
+resource app_signature "application/x-vnd.ali-DebugMonitor";
+
+resource app_version {
+	major  = 0,
+	middle = 1,
+	minor  = 1,
+
+	variety = B_APPV_DEVELOPMENT,
+	internal = 0,
+
+	short_info = "Debug Monitor",
+	long_info = "DebugMonitor by Alister Lee.\n(C) Copyright 1999. \n\
+				 Free software\nhttp://www.pobox.com/~alister"
+};
+
+resource app_flags B_SINGLE_LAUNCH;
+
+resource large_icon array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000FFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000FFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF0000000000FFFFFF0000000000FFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFF000000FFFFFFFFFFFFFFFF0000000000FFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF000000FFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF000000FFFFFFFFFFFFFFFFFFFFFFFF000000FFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF000000FFFFFFFFFFFFFFFFFFFFFFFF000000FFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000FFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000FFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFF0000FFFF00000037000000370000FFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFF00FFFFFF00003737000037370000FFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF000000000000000000000000000000000000000000FFFFFF"
+	$"FFFFFFFFFFFFFF000000000000000000000000000000000000000000000000FF"
+	$"FFFFFFFFFFFFFF0000FFFFFFFFFF00003737000037370000FFFFFFFF000000FF"
+	$"FFFFFFFFFFFFFF00FFFFFFFFFFFF00000037000037000000FFFFFFFFFF000000"
+	$"FFFFFFFFFFFF0000000000000000000000000000000000000000FFFFFFFF0000"
+	$"FFFFFFFFFFFF0000000000000000000000000000000000000000FFFFFFFF0000"
+	$"FFFFFF0000000000FFFF0000000000000000FFFFFFFFFFFF00000000FFFFFFFF"
+	$"FFFF000000000000FF000000000000000000FFFFFFFFFFFF00000000FFFFFFFF"
+	$"FFFF0000FFFFFF00000000FFFFFF0000000000FFFFFFFFFFFFFF0000FFFFFFFF"
+	$"FFFF0000FFFF00000000FFFFFFFF0000FF000000FFFFFFFFFFFF0000FFFFFFFF"
+	$"FFFFFFFFFF00000000FFFFFFFFFF0000FFFF000000FFFFFFFFFF0000FFFFFFFF"
+	$"FFFFFFFFFF000000FFFFFFFFFFFF0000FFFFFF0000FFFFFFFFFF0000FFFFFFFF"
+	$"FFFFFFFF0000FFFFFFFFFFFFFFFF0000FFFFFF0000FFFFFFFFFF000000FFFFFF"
+	$"FFFFFFFF0000FFFFFFFFFFFFFF000000FFFFFF000000FFFFFFFF000000FFFFFF"
+	$"FFFFFFFF000000FFFFFFFFFFFF000000FFFFFFFF0000FFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFF0000FFFFFFFFFF000000FFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF00000000000000FFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF000000000000FFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFF"
+};
+
+resource mini_icon array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF0000000000FFFFFFFFFF"
+	$"FFFFFFFF0000FFFFFFFF0000FFFFFFFF"
+	$"FFFFFFFF0000FFFFFFFFFF0000FFFFFF"
+	$"FFFFFFFFFFFFFFFFFF00000000FFFFFF"
+	$"FFFFFFFFFFFF00000000000000FFFFFF"
+	$"FFFFFFFFFFFF00FF0037003700FFFFFF"
+	$"FFFFFFFF0000000000000000000000FF"
+	$"FFFFFF00FFFFFF0037003700FFFF0000"
+	$"FFFFFF00000000000000000000FFFF00"
+	$"FF000000FF00000000FFFFFF0000FFFF"
+	$"FF00FFFF0000FF000000FFFFFF00FFFF"
+	$"FFFFFF00FFFFFF00FF0000FFFF00FFFF"
+	$"FFFF0000FFFFFF00FFFF00FFFF00FFFF"
+	$"FFFF00FFFFFF0000FFFF00FFFFFFFFFF"
+	$"FFFFFFFF000000FFFFFF00FFFFFFFFFF"
+};
+
diff --git a/DebugMonitor/Makefile b/DebugMonitor/Makefile
new file mode 100644
index 0000000..d3e2ac5
--- /dev/null
+++ b/DebugMonitor/Makefile
@@ -0,0 +1,123 @@
+## Haiku Generic Makefile v2.6 ##
+
+## Fill in this file to specify the project being created, and the referenced
+## Makefile-Engine will do all of the hard work for you. This handles any
+## architecture of Haiku.
+
+# The name of the binary.
+NAME = DebugMonitor
+
+# The type of binary, must be one of:
+#	APP:	Application
+#	SHARED:	Shared library or add-on
+#	STATIC:	Static library archive
+#	DRIVER: Kernel driver
+TYPE = APP
+
+# 	If you plan to use localization, specify the application's MIME signature.
+APP_MIME_SIG = 
+
+#	The following lines tell Pe and Eddie where the SRCS, RDEFS, and RSRCS are
+#	so that Pe and Eddie can fill them in for you.
+#%{
+# @src->@ 
+
+#	Specify the source files to use. Full paths or paths relative to the 
+#	Makefile can be included. All files, regardless of directory, will have
+#	their object files created in the common object directory. Note that this
+#	means this Makefile will not work correctly if two source files with the
+#	same name (source.c or source.cpp) are included from different directories.
+#	Also note that spaces in folder names do not work well with this Makefile.
+SRCS =  main.cpp Tracer.cpp DebugMonitor.cpp
+
+#	Specify the resource definition files to use. Full or relative paths can be
+#	used.
+RDEFS = DebugMonitor.rdef
+
+#	Specify the resource files to use. Full or relative paths can be used.
+#	Both RDEFS and RSRCS can be utilized in the same Makefile.
+RSRCS =
+
+# End Pe/Eddie support.
+# @<-src@ 
+#%}
+
+#	Specify libraries to link against.
+#	There are two acceptable forms of library specifications:
+#	-	if your library follows the naming pattern of libXXX.so or libXXX.a,
+#		you can simply specify XXX for the library. (e.g. the entry for
+#		"libtracker.so" would be "tracker")
+#
+#	-	for GCC-independent linking of standard C++ libraries, you can use
+#		$(STDCPPLIBS) instead of the raw "stdc++[.r4] [supc++]" library names.
+#
+#	- 	if your library does not follow the standard library naming scheme,
+#		you need to specify the path to the library and it's name.
+#		(e.g. for mylib.a, specify "mylib.a" or "path/mylib.a")
+LIBS =  $(STDCPPLIBS) be
+
+#	Specify additional paths to directories following the standard libXXX.so
+#	or libXXX.a naming scheme. You can specify full paths or paths relative
+#	to the Makefile. The paths included are not parsed recursively, so
+#	include all of the paths where libraries must be found. Directories where
+#	source files were specified are	automatically included.
+LIBPATHS = 
+
+#	Additional paths to look for system headers. These use the form
+#	"#include <header>". Directories that contain the files in SRCS are
+#	NOT auto-included here.
+SYSTEM_INCLUDE_PATHS =
+
+#	Additional paths paths to look for local headers. These use the form
+#	#include "header". Directories that contain the files in SRCS are
+#	automatically included.
+LOCAL_INCLUDE_PATHS =
+
+#	Specify the level of optimization that you want. Specify either NONE (O0),
+#	SOME (O1), FULL (O2), or leave blank (for the default optimization level).
+OPTIMIZE :=
+
+# 	Specify the codes for languages you are going to support in this
+# 	application. The default "en" one must be provided too. "make catkeys"
+# 	will recreate only the "locales/en.catkeys" file. Use it as a template
+# 	for creating catkeys for other languages. All localization files must be
+# 	placed in the "locales" subdirectory.
+LOCALES = 
+
+#	Specify all the preprocessor symbols to be defined. The symbols will not
+#	have their values set automatically; you must supply the value (if any) to
+#	use. For example, setting DEFINES to "DEBUG=1" will cause the compiler
+#	option "-DDEBUG=1" to be used. Setting DEFINES to "DEBUG" would pass
+#	"-DDEBUG" on the compiler's command line.
+DEFINES = 
+
+#	Specify the warning level. Either NONE (suppress all warnings),
+#	ALL (enable all warnings), or leave blank (enable default warnings).
+WARNINGS = 
+
+#	With image symbols, stack crawls in the debugger are meaningful.
+#	If set to "TRUE", symbols will be created.
+SYMBOLS := 
+
+#	Includes debug information, which allows the binary to be debugged easily.
+#	If set to "TRUE", debug info will be created.
+DEBUGGER := 
+
+#	Specify any additional compiler flags to be used.
+COMPILER_FLAGS = 
+
+#	Specify any additional linker flags to be used.
+LINKER_FLAGS = 
+
+#	(Only used when "TYPE" is "DRIVER"). Specify the desired driver install
+#	location in the /dev hierarchy. Example:
+#		DRIVER_PATH = video/usb
+#	will instruct the "driverinstall" rule to place a symlink to your driver's
+#	binary in ~/add-ons/kernel/drivers/dev/video/usb, so that your driver will
+#	appear at /dev/video/usb when loaded. The default is "misc".
+DRIVER_PATH = 
+
+## Include the Makefile-Engine
+DEVEL_DIRECTORY := \
+	$(shell findpaths -r "makefile_engine" B_FIND_PATH_DEVELOP_DIRECTORY)
+include $(DEVEL_DIRECTORY)/etc/makefile-engine
diff --git a/DebugMonitor/Tracer.cpp b/DebugMonitor/Tracer.cpp
index 351f818..740d581 100644
--- a/DebugMonitor/Tracer.cpp
+++ b/DebugMonitor/Tracer.cpp
@@ -9,7 +9,7 @@
 
 #include <TextView.h>
 #include <Application.h>
-#include <strstream.h>
+#include <strstream>
 #include <String.h>
 #include <MenuBar.h>
 #include <MenuItem.h>
@@ -94,7 +94,7 @@ bool TracerWindow::QuitRequested()
 
 const BString TracerWindow::FormatMessage(BMessage *message) const
 {
-	ostrstream os;
+	std::ostrstream os;
 	
 	if (pAttrMenu->FindItem("Timestamp")->IsMarked())
 		os << "Time: " << message->FindInt32("Time") << "| ";
@@ -117,7 +117,7 @@ const BString TracerWindow::FormatMessage(BMessage *message) const
 	if (pAttrMenu->FindItem("Message")->IsMarked())
 		os << message->FindString("Message");
 		
-	os << ends;
+	os << std::endl;
 			
 	BString s(os.str());
 	return s;
diff --git a/Scribble/DebugClient.a b/Scribble/DebugClient.a
new file mode 100644
index 0000000000000000000000000000000000000000..ac5d53676d9fbc06a342f04d159ae7fb3e7d662f
GIT binary patch
literal 9410
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
VIqv<A{c&RidB@7?zqW9Q{{X_2zRmyu

literal 0
HcmV?d00001

diff --git a/Scribble/Makefile b/Scribble/Makefile
new file mode 100644
index 0000000..691dd47
--- /dev/null
+++ b/Scribble/Makefile
@@ -0,0 +1,123 @@
+## Haiku Generic Makefile v2.6 ##
+
+## Fill in this file to specify the project being created, and the referenced
+## Makefile-Engine will do all of the hard work for you. This handles any
+## architecture of Haiku.
+
+# The name of the binary.
+NAME = Scribble
+
+# The type of binary, must be one of:
+#	APP:	Application
+#	SHARED:	Shared library or add-on
+#	STATIC:	Static library archive
+#	DRIVER: Kernel driver
+TYPE = APP
+
+# 	If you plan to use localization, specify the application's MIME signature.
+APP_MIME_SIG = 
+
+#	The following lines tell Pe and Eddie where the SRCS, RDEFS, and RSRCS are
+#	so that Pe and Eddie can fill them in for you.
+#%{
+# @src->@ 
+
+#	Specify the source files to use. Full paths or paths relative to the 
+#	Makefile can be included. All files, regardless of directory, will have
+#	their object files created in the common object directory. Note that this
+#	means this Makefile will not work correctly if two source files with the
+#	same name (source.c or source.cpp) are included from different directories.
+#	Also note that spaces in folder names do not work well with this Makefile.
+SRCS =  main.cpp ScribbleWindow.cpp ScribbleView.cpp
+
+#	Specify the resource definition files to use. Full or relative paths can be
+#	used.
+RDEFS = 
+
+#	Specify the resource files to use. Full or relative paths can be used.
+#	Both RDEFS and RSRCS can be utilized in the same Makefile.
+RSRCS =  Scribble.rsrc
+
+# End Pe/Eddie support.
+# @<-src@ 
+#%}
+
+#	Specify libraries to link against.
+#	There are two acceptable forms of library specifications:
+#	-	if your library follows the naming pattern of libXXX.so or libXXX.a,
+#		you can simply specify XXX for the library. (e.g. the entry for
+#		"libtracker.so" would be "tracker")
+#
+#	-	for GCC-independent linking of standard C++ libraries, you can use
+#		$(STDCPPLIBS) instead of the raw "stdc++[.r4] [supc++]" library names.
+#
+#	- 	if your library does not follow the standard library naming scheme,
+#		you need to specify the path to the library and it's name.
+#		(e.g. for mylib.a, specify "mylib.a" or "path/mylib.a")
+LIBS =  $(STDCPPLIBS) be tracker media game device debug debugger DebugClient.a
+
+#	Specify additional paths to directories following the standard libXXX.so
+#	or libXXX.a naming scheme. You can specify full paths or paths relative
+#	to the Makefile. The paths included are not parsed recursively, so
+#	include all of the paths where libraries must be found. Directories where
+#	source files were specified are	automatically included.
+LIBPATHS = 
+
+#	Additional paths to look for system headers. These use the form
+#	"#include <header>". Directories that contain the files in SRCS are
+#	NOT auto-included here.
+SYSTEM_INCLUDE_PATHS = 
+
+#	Additional paths paths to look for local headers. These use the form
+#	#include "header". Directories that contain the files in SRCS are
+#	automatically included.
+LOCAL_INCLUDE_PATHS =
+
+#	Specify the level of optimization that you want. Specify either NONE (O0),
+#	SOME (O1), FULL (O2), or leave blank (for the default optimization level).
+OPTIMIZE :=
+
+# 	Specify the codes for languages you are going to support in this
+# 	application. The default "en" one must be provided too. "make catkeys"
+# 	will recreate only the "locales/en.catkeys" file. Use it as a template
+# 	for creating catkeys for other languages. All localization files must be
+# 	placed in the "locales" subdirectory.
+LOCALES = 
+
+#	Specify all the preprocessor symbols to be defined. The symbols will not
+#	have their values set automatically; you must supply the value (if any) to
+#	use. For example, setting DEFINES to "DEBUG=1" will cause the compiler
+#	option "-DDEBUG=1" to be used. Setting DEFINES to "DEBUG" would pass
+#	"-DDEBUG" on the compiler's command line.
+DEFINES = 
+
+#	Specify the warning level. Either NONE (suppress all warnings),
+#	ALL (enable all warnings), or leave blank (enable default warnings).
+WARNINGS = 
+
+#	With image symbols, stack crawls in the debugger are meaningful.
+#	If set to "TRUE", symbols will be created.
+SYMBOLS := 
+
+#	Includes debug information, which allows the binary to be debugged easily.
+#	If set to "TRUE", debug info will be created.
+DEBUGGER := 
+
+#	Specify any additional compiler flags to be used.
+COMPILER_FLAGS = 
+
+#	Specify any additional linker flags to be used.
+LINKER_FLAGS = 
+
+#	(Only used when "TYPE" is "DRIVER"). Specify the desired driver install
+#	location in the /dev hierarchy. Example:
+#		DRIVER_PATH = video/usb
+#	will instruct the "driverinstall" rule to place a symlink to your driver's
+#	binary in ~/add-ons/kernel/drivers/dev/video/usb, so that your driver will
+#	appear at /dev/video/usb when loaded. The default is "misc".
+DRIVER_PATH = 
+
+## Include the Makefile-Engine
+DEVEL_DIRECTORY := \
+	$(shell findpaths -r "makefile_engine" B_FIND_PATH_DEVELOP_DIRECTORY)
+include $(DEVEL_DIRECTORY)/etc/makefile-engine
diff --git a/Scribble/Scribble b/Scribble/Scribble
deleted file mode 100644
index afa58b84fed7a45430e30aa173d414a4ae764d66..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 49261
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

diff --git a/Scribble/ScribbleView.cpp b/Scribble/ScribbleView.cpp
index 9976eb5..5d198b3 100644
--- a/Scribble/ScribbleView.cpp
+++ b/Scribble/ScribbleView.cpp
@@ -1,7 +1,8 @@
 #include "ScribbleView.h"
 
 #include "../DebugClient/DebugClient.h"
-
+#include <AppKit.h>
+#include <SupportKit.h>
 
 ScribbleView::ScribbleView(const BRect &aRect) 
 		: BView(aRect, "ScribbleView", B_FOLLOW_ALL_SIDES, 0)
@@ -9,7 +10,7 @@ ScribbleView::ScribbleView(const BRect &aRect)
 	drawing = false;
 }
 
-ostream& operator<<(ostream &os, const BPoint &p)
+std::ostream& operator<<(std::ostream &os, const BPoint &p)
 {
 	os << "(" << p.x << "," << p.y << ")";
 	return os;	
@@ -48,4 +49,4 @@ void ScribbleView::MouseMoved(BPoint where,
 void ScribbleView::MessageReceived(BMessage *message)
 {
 	BView::MessageReceived(message);
-}
\ No newline at end of file
+}
-- 
2.19.0

